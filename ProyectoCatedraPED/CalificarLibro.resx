<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="star1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAAEJwAABCcASbNOjQAAAAHdElNRQfpBRMRGzIL1sS2AAAA
        GXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAw1JREFUaEPtmUuoTVEch49XniWpmzyS
        pCQTGYoYYMycCBNliIkykJBiYqAUdQcGBlIGSpgYKo9EpCSJEoryFr7vtreO4+90zrlrnbN3/Oqrffde
        6//7rXvPPeuxG//VuRYW1F6HC2qtufCwwOvaagd8L/C6lpoGV+FHgdfeq53Ww3soB+K192qlcXAGykGU
        eM9ntdFSeA6tA/Gez2qj/dA6iBKf1UKz4A5EgxCf2aby2gzfIBqE+Mw2ldYUuATRAJqxjW0rqzXwDqLw
        zdjGtpXUGDgJUfAI29qncloMTyEKHWFb+1ROeyEK3A77DEzOzJNhBsyGRbAKbkMUth32sa81rGVNa/c0
        +0+ASTAd/H53E7QMVsMG2Aa74QicgvNwDW7CI3C2fguucKOw7bCPfa1hLWtaWw+99NTbDGYxk9nMaFYz
        m90xNHbBZbgBD+AZvIEP8BWiAIPALGYymxnNamazO4bGPDgNUec6YHbHMKKpcAAccdS4ipjVzGb/TeNh
        J7yGqGOVMKNZzfxXbYQnEBWoAmYzY0daCb18nebGTGbrSkvgCkQFB4FZzNST5sBZ6GWOSIXeZjDLqOSk
        cww+Q2SUEz31NkMSTQRn2E6W6KnQS0+9k8ol9yZ4AZFxSvTQK+syfx24PIgCpMDaevRF+yAKkQJr90X+
        uYchCpECa/dl5zgTbkEUIgXW1iO7loNL6ShECqytR3ZtgZwTpLX1yK4TEAVIiR5Z5fuN6xCZp0SPrO9S
        PL7p14SY9ajIfUA3+/hPcKHA66hNhB4d7zl60UGIjCPcO7jM8IxXvO5mj6NXFrl46+SA+iUcgl8HAk3y
        ns9sE/VtRq/kC0Y1Hx5DZCpfwI/QCmg3M/vMNra1T1RL9NIzudbCR4hM78JW+ONEo41sax/7RjX10jO5
        9kCr2Ss4CqP5zdnXGtZqra9nUnkWew5KAz8SF8GDgBQLPGtYy5rNHzc9k74FHoL7YPF7sB1yTFjWtLYe
        eumpdzL5z+l50nFY4I3M0kMvPfVOpvJ0fuzIT/2RXuXp+7+iRuMnCXmWtHszXbwAAAAASUVORK5CYII=
</value>
  </data>
</root>